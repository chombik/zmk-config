/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define QWRT 0
#define CLMK 1
#define SYMS 2
#define NUMS 3
#define ARRW 4
#define CONF 5

&lt {
    quick_tap_ms = <120>;
};

&mt {
    quick_tap_ms = <120>;
};

/ {
    ZMK_MACRO(my_lng,
        wait-ms = <30>;
        tap-ms = <40>;
        bindings = <&kp LA(CAPS) &tog CLMK>;
    )

    ZMK_MACRO(my_syms,
      wait-ms = <0>;
      bindings
        = <&macro_press &mo SYMS &kp CAPS>
        , <&macro_pause_for_release>
        , <&macro_release &kp CAPS &mo SYMS>;
    )

    keymap {
        compatible = "zmk,keymap";

        qwrt_layer {
            bindings = <
  &lt NUMS ESC   &kp Q   &kp W      &kp E      &kp R        &kp T        &kp Y           &kp U      &kp I     &kp O     &kp P          &kp BSPC
  &lt ARRW TAB   &kp A   &kp S      &kp D      &kp F        &kp G        &kp H           &kp J      &kp K     &kp L  &kp SEMI           &kp RET
      &mo CONF   &kp Z   &kp X      &kp C      &kp V        &kp B        &kp N           &kp M  &kp COMMA   &kp DOT  &lt CONF ESC  &lt NUMS ESC
                    &kp LGUI  &kp  LALT &mt LSHFT SPACE  &lt ARRW SPACE    &mt LCTL RET  &my_syms  &mt LALT BSPC  &mt RGUI RBKT
            >;
        };

        clmk_layer {
            bindings = <
  &lt NUMS ESC  &kp Q     &kp W      &kp F            &kp P        &kp B        &kp J           &kp L      &kp U     &kp Y     &none      &kp BSPC
  &lt ARRW TAB  &kp A     &kp R      &kp S            &kp T        &kp G        &kp M           &kp N      &kp E     &kp I     &kp O      &kp RET
      &mo CONF  &kp Z     &kp X      &kp C            &kp D        &kp V        &kp K           &kp N      &none     &none  &lt CONF ESC  &lt NUMS ESC
                    &kp LGUI  &kp  LALT &mt LSHFT SPACE  &lt ARRW SPACE    &mt LCTL RET  &mo SYMS  &mt LALT BSPC  &mt RGUI RBKT
            >;
        };

        syms_layer {
            bindings = <
  &tog NUMS    &kp GRAVE   &kp TILDE   &kp LCUR   &kp RCUR    &kp AMPS     &kp ASTRK   &kp LPRN    &kp RPRN  &kp LBKT   &kp RBKT    &kp PIPE
  &tog ARRW    &kp EXCL       &kp AT   &kp HASH   &kp DLLR   &kp PRCNT      &kp PLUS  &kp MINUS   &kp EQUAL  &kp SCLN    &kp DQT    &kp QUOT
  &trans    &kp QMAR     &kp BSLS     &kp LT     &kp GT    &kp CRRT       &kp FSLS  &kp UNDER   &kp COMMA   &kp DOT   &kp COLN      &mo 5
                               &trans     &trans  &trans    &trans        &trans     &trans   &mt LALT DEL    &trans
            >;
        };

        nums_layer {
            bindings = <
  &tog NUMS     &kp N1    &kp N2     &kp N3    &kp N4     &kp N5       &kp ASTRK   &kp KP_N7  &kp KP_N8  &kp KP_N9   &kp EQUAL   &kp KP_NUM
  &lt ARRW TAB  &kp N6    &kp N7     &kp N8    &kp N9     &kp N0       &kp MINUS   &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp PLUS       &kp DOT
    &trans       &none     &none      &none     &none      &none        &kp FSLS    &kp KP_N1  &kp KP_N2  &kp KP_N3   &kp COLN        &trans
                            &trans  &lt 3 TAB    &trans     &trans       &trans    &kp KP_N0  &mt LALT DOT    &trans
            >;
        };

        arrw_layer {
            bindings = <
  &tog ARRW    &none    &kp F1   &kp F2    &kp F3    &kp F4           &kp INS     &kp HOME      &kp UP     &kp END    &kp PGUP   &kp BSPC
    &kp TAB    &none    &kp F5   &kp F6    &kp F7    &kp F8           &kp DEL     &kp LEFT    &kp DOWN   &kp RIGHT    &kp PGDN  &kp K_APP
    &trans  &kp LGUI    &kp F9  &kp F10   &kp F11  &kp  F12           &kp RET        &none       &none   &kp K_APP    &kp RSFT      &mo CONF
                  &trans     &trans     &trans     &kp LCTL           &mt LCTL RET  &trans      &trans      &trans
            >;
        };

        conf_layer {
            bindings = <
  &bootloader         &none         &none         &none         &none     &kp GRAVE             &none         &none      &kp PSCRN      &kp SLCK  &kp LBKT  &bootloader
   &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &bt BT_SEL 4  &bt BT_SEL 3   &bt BT_SEL 2  &bt BT_SEL 1  &kp QUOT   &bt BT_CLR
       &trans    &sys_reset         &none         &none         &none  &bt BT_SEL 0      &bt BT_SEL 0      &kp RBKT        &tog CLMK       &my_lng    &trans   &sys_reset
                                    &none        &trans         &none        &trans            &trans         &none        &trans         &none
            >;
        };
    };
};
